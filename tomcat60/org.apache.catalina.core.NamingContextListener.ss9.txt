23

    public String[] getServiceqname() {
        return (this.serviceqname);
    }

    public String getServiceqname(int i) {
        return this.serviceqname[i];
    }

    public String getServiceqnameNamespaceURI() {
        return this.serviceqname[0];
    }

    public String getServiceqnameLocalpart() {
        return this.serviceqname[1];
    }

    public String getWsdlfile() {
        return (this.wsdlfile);
    }

    public String getPortName(int i) {
        return this.portNames.get(i);
    }

    public int getPortNamesSize() {
        return this.portNames.size();
    }

    public String getSoapRole(int i) {
        return this.soapRoles.get(i);
    }

    public int getSoapRolesSize() {
        return this.soapRoles.size();
    }

    public Iterator getHandlers() {
        return handlers.keySet().iterator();
    }

    public ContextHandler getHandler(String handlername) {
        return (ContextHandler) handlers.get(handlername);
    }

    public void setJaxrpcmappingfile(String jaxrpcmappingfile) {
        this.jaxrpcmappingfile = jaxrpcmappingfile;
    }

    public String getNamespaceuri(String localpart) {
        return (String) soapHeaders.get(localpart);
    }

    public String getHandlerclass() {
        return (this.handlerclass);
    }

    public Iterator getLocalparts() {
        return soapHeaders.keySet().iterator();
    }

    public Iterator getHandlers() {
        return handlers.keySet().iterator();
    }

    public String getJaxrpcmappingfile() {
        return (this.jaxrpcmappingfile);
    }

    public int getSoapRolesSize() {
        return this.soapRoles.size();
    }

    public int getPortNamesSize() {
        return this.portNames.size();
    }

    // --------------------------------------------------------- Public Methods


    /**
     * Return a String representation of this object.
     */
    public String toString() {

        StringBuffer sb = new StringBuffer("ContextHandler[");
        sb.append("name=");
        sb.append(getName());
        if (handlerclass != null) {
            sb.append(", class=");
            sb.append(handlerclass);
        }
        if (this.soapHeaders != null) {
            sb.append(", soap-headers=");
            sb.append(this.soapHeaders);
        }
        if (this.getSoapRolesSize() > 0) {
            sb.append(", soap-roles=");
            sb.append(soapRoles);
        }
        if (this.getPortNamesSize() > 0) {
            sb.append(", port-name=");
            sb.append(portNames);
        }
        if (this.listProperties() != null) {
            sb.append(", init-param=");
            sb.append(this.listProperties());
        }
        sb.append("]");
        return (sb.toString());

    }

    public String getNamespaceuri(String localpart) {
        return (String) soapHeaders.get(localpart);
    }

    public void addHandler(ContextHandler handler) {
        handlers.put(handler.getName(), handler);
    }
