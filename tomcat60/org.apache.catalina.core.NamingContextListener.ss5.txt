8


    public static void registerGlobalResourceAccess(Context globalContext, String localName,
            String globalName) {
        validateGlobalContext(globalContext);
        ClassLoader cl = Thread.currentThread().getContextClassLoader();
        Map<String,String> registrations = globalResourceRegistrations.get(cl);
        if (registrations == null) {
            // Web application initialization is single threaded so this is
            // safe.
            registrations = new HashMap<String,String>();
            globalResourceRegistrations.put(cl, registrations);
        }
        registrations.put(localName, globalName);
    }


    public static void deregisterGlobalResourceAccess(Context globalContext, String localName) {
        validateGlobalContext(globalContext);
        ClassLoader cl = Thread.currentThread().getContextClassLoader();
        Map<String,String> registrations = globalResourceRegistrations.get(cl);
        if (registrations != null) {
            registrations.remove(localName);
        }
    }


    public static void deregisterGlobalResourceAccess(Context globalContext) {
        validateGlobalContext(globalContext);
        ClassLoader cl = Thread.currentThread().getContextClassLoader();
        globalResourceRegistrations.remove(cl);
    }

    public String getFactory() {
        return factory;
    }


    private static void validateGlobalContext(Context globalContext) {
        if (ResourceLinkFactory.globalContext != null &&
                ResourceLinkFactory.globalContext != globalContext) {
            throw new SecurityException("Caller provided invalid global context");
        }
    }
    
    // --------------------------------------------------------- Public Methods


    /**
     * Return a String representation of this object.
     */
    public String toString() {

        StringBuffer sb = new StringBuffer("ContextResourceLink[");
        sb.append("name=");
        sb.append(getName());
        if (getType() != null) {
            sb.append(", type=");
            sb.append(getType());
        }
        if (getGlobal() != null) {
            sb.append(", global=");
            sb.append(getGlobal());
        }
        sb.append("]");
        return (sb.toString());

    }
