37

    public String getDecodedRequestURI() {
        return (this.decodedRequestURI);
    }
    
    public String getContentType() {
        return (this.contentType);
    }

    public Iterator getLocales() {
        return (locales.iterator());
    }


    public void setContentType(String type) {
        contentTypeMB.setString(type);
    }


    public void setContentType(MessageBytes mb) {
        contentTypeMB=mb;
    }

    public Iterator getHeaderNames() {
        return (headers.keySet().iterator());
    }
    
    public ByteChunk getBody() {
        return (this.body);
    }

    public Iterator getCookies() {
        return (cookies.iterator());
    }

    public Iterator getHeaderValues(String name) {
        ArrayList values = (ArrayList) headers.get(name);
        if (values == null)
            return ((new ArrayList()).iterator());
        else
            return (values.iterator());
    }

    public String getMethod() {
        return (this.method);
    }

    /**
     * Clears all header fields.
     */
    // [seguin] added for consistency -- most other objects have recycle().
    public void recycle() {
        clear();
    }

    public void recycle() {
        nameB.recycle();
        valueB.recycle();
        next=null;
    }

    public void recycle() {
        parameterCount = 0;
        paramHashValues.clear();
        didQueryParameters=false;
        encoding=null;
        decodedQuery.recycle();
        parseFailedReason = null;
    }

    /**
     * Clears all header fields.
     */
    public void clear() {
        for (int i = 0; i < count; i++) {
            headers[i].recycle();
        }
        count = 0;
    }
    
    public void setContentType(String contentType) {
        this.contentType = contentType;
    }

    public void addCookie(Cookie cookie) {
        cookies.add(cookie);
    }

    public void setDecodedRequestURI(String decodedRequestURI) {
        this.decodedRequestURI = decodedRequestURI;
    }

    public void setRequestURI(String requestURI) {
        this.requestURI = requestURI;
    }

    public void addLocale(Locale locale) {
        locales.add(locale);
    }

    public void setQueryString(String queryString) {
        this.queryString = queryString;
    }

    public void setBody(ByteChunk body) {
        this.body = body;
    }

    public void setMethod(String method) {
        this.method = method;
    }
